@inject IRepositorio repositorio

@if (mostrarFormulario)
{
    <EditForm Model="Gasto" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label for="nombre">Nombre:</label>
            <div>
                <InputText class="form-control" @bind-Value="Gasto.Nombre" />
                <ValidationMessage For="@(() => Gasto.Nombre)" />
            </div>

        </div>
        <div class="form-group">
            <label for="tipo">Tipo:</label>
            <div>
                <InputSelectNumber class="form-control" @bind-Value="Gasto.TipoId" id="persona">
                    <option value="0">-- Seleccionar tipo --</option>
                    @foreach (var tipo in Tipos)
                    {
                        <option value="@tipo.Id">@tipo.Nombre</option>
                    }
                </InputSelectNumber>
                <ValidationMessage For="@(() => Gasto.TipoId)" />
            </div>
        </div>
        <div class="form-group">
            <label for="persona">Persona:</label>
            <div>
                <InputSelectNumber class="form-control" @bind-Value="Gasto.PersonaId" id="persona">
                    <option value="0">-- Seleccionar persona --</option>
                    @foreach (var persona in Personas)
                    {
                        <option value="@persona.Id">@persona.Nombre</option>
                    }
                </InputSelectNumber>
                <ValidationMessage For="@(() => Gasto.PersonaId)" />
            </div>
        </div>
        <div class="form-group">
            <label for="monto">Monto:</label>
            <div>
                <InputNumber class="form-control" @bind-Value="Gasto.Monto" id="monto" />
                <ValidationMessage For="@(() => Gasto.Monto)" />
            </div>
        </div>
        <div class="form-group">
            <label for="fecha">Fecha:</label>
            <div>
                <InputDate class="form-control" @bind-Value="Gasto.Fecha" />
                <ValidationMessage For="@(() => Gasto.Fecha)" />
            </div>
        </div>
        <div class="form-group">
            <label for="descripcion">Descripcion:</label>
            <div>
                <InputTextArea class="form-control" @bind-Value="Gasto.Descripcion" />
                <ValidationMessage For="@(() => Gasto.Descripcion)" />
            </div>
        </div>

        <button class="btn btn-success" type="submit">Guardar Cambios</button>
    </EditForm>
}
else
{
    <Loading></Loading>
}

@code {
    [Parameter] public Gasto Gasto { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    private List<Persona> Personas = new List<Persona>();
    private List<Tipo> Tipos = new List<Tipo>();
    private bool mostrarFormulario =  false;

    protected async override Task OnInitializedAsync()
    {
        var httpResponsePersonas = await repositorio.Get<List<Persona>>("api/personas");
        Personas = httpResponsePersonas.Response;
        var httpResponseTipos = await repositorio.Get<List<Tipo>>("api/tipos");
        Tipos = httpResponseTipos.Response;
        mostrarFormulario = true;
    }
}
